rule timeout:
    resources:
        runtime = lambda wildcards, attempt: attempt
    output: "timeout.txt"
    threads: lambda wildcards, attempt: attempt
    log: "timeout.log"
    shell:
        """
        for i in $(seq 1 80)
        do
            echo $i >> {output}
            sleep 1
        done
        exit 0
        """


rule bar:
    resources:
        runtime = 1
    output: "bar.txt"
    shell:
        "echo bar > {output}"


rule excessive_runtime:
    resources:
        runtime = 10000
    output: "runtime.txt"
    shell:
        "echo {resources} > {output}"


rule excessive_memory:
    resources:
        mem_mb = 2000
    output: "memory.txt"
    shell:
        "echo {resources} > {output}"


rule memory_with_constraint:
    resources:
        mem_mb = 800
    output: "memory_with_constraint.txt"
    shell:
        "echo {resources} > {output}"


rule short_queue:
    output: "short_queue.txt"
    shell: "touch {output}"


rule group_job1:
    output: "group_job.1.txt"
    group: "groupjob"
    shell: "echo group_job1 > {output}"


rule group_job2:
    input: "{wc}.1.txt"
    output: "{wc}.2.txt"
    group: "groupjob"
    shell: "cat {input} > {output}; echo group_job2 >> {output}"


rule wildcard_job:
    output: "{prefix}.wc.txt"
    params:
        label = "wcj_params"
    wildcard_constraints:
        prefix = "wildcard"
    shell: "echo {wildcards.prefix} > {output}"
